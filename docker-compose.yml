version: '3.2'

services:

  # *********** #
  #    Geode    #
  # *********** #

  locator:
    image: apachegeode/geode
    container_name: locator
    hostname: locator.localhost
    networks:
      default:
        aliases: [locator.localhost]
    expose:
      - "10334"
      - "1099"
      - "7575"
    ports:
      - "1099:1099"
      - "10334:10334"
      - "7575:7575"
      - "7070:7070"
    volumes:
      - ./docker/:/docker/
    command: /docker/geode/gfshWrapper.sh gfsh start locator --name=locator.localhost --mcast-port=0

  server:
    image: apachegeode/geode
    depends_on: [locator]
    container_name: server
    hostname: server.localhost
    networks:
      default:
        aliases: [server.localhost]
    links:
      - locator:locator
    expose:
      - "40404"
      - "1099"
    ports:
      - "40404:40404"
      - "7071:7070"
    volumes:
      - ./docker/:/docker/
    command: /docker/geode/startServer.sh --server-port=40404 --max-heap=1G

  geode-config:
    image: alpine
    depends_on: [server, locator]
    container_name: geode-config
    volumes:
      - ./docker:/docker
    command: docker/geode/setup.sh

  # ************************* #
  #    MongoDB Replica Set    #
  # ************************* #
  mongodb-primary:
    image: mongo:4.0
    container_name: mongodb-primary
    hostname: mongodb-primary
    ports:
      - "27017:27017"
    restart: always
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_NAME=rs0
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  mongodb-secondary:
    image: mongo:4.0
    container_name: mongodb-secondary
    hostname: mongodb-secondary
    depends_on:
      - mongodb-primary
    ports:
      - "27018:27017"
    restart: always
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodb-primary
      - MONGODB_PRIMARY_PORT_NUMBER=27017
      - MONGODB_REPLICA_SET_NAME=rs0
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  mongodb-arbiter:
    image: mongo:4.0
    container_name: mongodb-arbiter
    hostname: mongodb-arbiter
    depends_on:
      - mongodb-primary
    ports:
      - "27019:27017"
    restart: always
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_PRIMARY_HOST=mongodb-primary
      - MONGODB_PRIMARY_PORT_NUMBER=27017
      - MONGODB_REPLICA_SET_NAME=rs0
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  mongodb-setup:
    image: mongo:4.0
    container_name: mongodb-setup
    depends_on: ["mongodb-primary", "mongodb-secondary", "mongodb-arbiter"]
    volumes:
      - ./docker/mongodb-replicaset:/scripts
    entrypoint: [ "/scripts/setup.sh" ]