kind: Deployment
apiVersion: apps/v1
metadata:
  name: postgres-file-source
  labels:
    app: postgres-file-source
spec:
  replicas: 2
  selector:
    matchLabels:
      app: postgres-file-source
  template:
    metadata:
      labels:
        app: postgres-file-source
    spec:
      containers:
        - name: postgres-scs-file-source
          image: springcloudstream/file-source-kafka:latest
          ports:
            - containerPort: 8080
            - containerPort: 80
              protocol: TCP
          env:
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: kafka
            - name: SERVER_PORT
              value: '80'
            - name: SPRING_CLOUD_STREAM_BINDINGS_INPUT_GROUP
              value: postgres-processor-stream
            - name: SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_DESTINATION
              value:  postgres-file-source
            - name: SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_PRODUCER_PARTITION-COUNT
              value: "8"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_AUTOADDPARTITIONS
              value: "true"
            - name: file.directory
              value: /tmp/foo/
            - name: file.consumer.mode
              value: lines
            - name: debug
              value: 'true'
            - name: logging.file
              value: /home/spring-boot.log
            - name: logging.file.max-size
              value: 100MB
      restartPolicy: Always
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: postgres-processor
  labels:
    app: postgres-processor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: postgres-processor
  template:
    metadata:
      labels:
        app: postgres-processor
    spec:
      containers:
        - name: postgres-processor
          image: jhenfuseio/postgres-processor
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: kafka
            - name: SPRING_CLOUD_STREAM_BINDINGS_INPUT_GROUP
              value: postgres-processor-stream
            - name: SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_DESTINATION
              value:  postgres-processor
            - name: SPRING_CLOUD_STREAM_BINDINGS_INPUT_DESTINATION
              value: postgres-file-source
            - name: SERVER_PORT
              value: '80'
            - name: spring.datasource.driver-class-name
              value: org.postgresql.Driver
            - name: spring.datasource.password
              value: ${DB_PASSWORD}
            - name: spring.datasource.url
              value: jdbc:postgresql://localhost:5432/postgres
            - name: spring.datasource.username
              value: ${DB_USER}
            - name: debug
              value: 'true'
            - name: logging.file
              value: /home/spring-boot.log
            - name: logging.file.max-size
              value: 100MB
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.14
          command: ["/cloud_sql_proxy",
                    "-instances=enfuse-gke:us-central1:s1p-demo-postgres=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      restartPolicy: Always